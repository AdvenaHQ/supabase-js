{
  "version": 3,
  "sources": ["../../../src/helpers/deepMerge.ts"],
  "sourcesContent": ["/**\n * Deeply merges the properties of the `source` object into the `target` object.\n * If a property is an object in both `target` and `source`, it recursively merges their properties.\n *\n * @param target - The target object to merge properties into.\n * @param source - The source object whose properties will be merged into the target.\n *\n * @returns A new object with the merged properties of both `target` and `source`.\n */\nexport const deepMerge = (\n    // biome-ignore lint/suspicious/noExplicitAny: This is necessary to merge objects\n    target: any,\n    // biome-ignore lint/suspicious/noExplicitAny: This is necessary to merge objects\n    source: any,\n) => {\n    // Iterate through `source` properties\n    for (const key of Object.keys(source)) {\n        // If an `Object` set property to merge of `target` and `source` properties\n        if (source[key] instanceof Object && target[key] !== undefined) {\n            // Merge the properties of the `source` and `target` properties\n            Object.assign(source[key], deepMerge(target[key], source[key]));\n        }\n    }\n\n    // Spread the `source` properties to the `target` properties and return\n    return { ...target, ...source };\n};\n"],
  "mappings": "6FASO,MAAMA,EAAY,CAErBC,EAEAC,IACA,CAEA,UAAWC,KAAO,OAAO,KAAKD,CAAM,EAE5BA,EAAOC,CAAG,YAAa,QAAUF,EAAOE,CAAG,IAAM,QAEjD,OAAO,OAAOD,EAAOC,CAAG,KAAG,QAAA,WAAUF,EAAOE,CAAG,EAAGD,EAAOC,CAAG,CAAC,CAAC,EAKtE,MAAO,CAAE,GAAGF,EAAQ,GAAGC,CAAM,CACjC,EAjBa,QAAA,UAASF",
  "names": ["deepMerge", "target", "source", "key"]
}
