"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.UpstashCacheProviderFetch=void 0,require("server-only");const l=require("@upstash/redis"),f=require("ts-md5"),o=require("../../helpers/log"),c=require("../index"),u={"/realtime/":{cache:!1,expireSetAfter:void 0},"/auth/":{cache:!0,expireSetAfter:60},"/storage/":{cache:!1,expireSetAfter:void 0},"/functions/":{cache:!0,expireSetAfter:30},"/rest/":{cache:!0,expireSetAfter:900}},p=async(s,r)=>{if(c.globalOptions?.cache?.provider!=="upstash-redis")return(0,o.log)("\u26A0\uFE0F The cache provider is not configured for Upstash Redis. Please check the configuration. Falling back to default fetch.","warn",!0),fetch(s,r);const a=new l.Redis({url:c.globalOptions.cache?.upstash?.url,token:c.globalOptions.cache?.upstash?.token}),t={url:new URL(s),method:r?.method||"GET",headers:new Headers(r?.headers)},n=`/${t.url.pathname.split("/")[1]}/`;if(t.method==="GET"&&u[n]?.cache)try{const e=f.Md5.hashStr(t.url.toString()),h=await a.get(e);if(h)return(0,o.log)(`\u{1F3AF} Cache HIT for key \`${e}\` (${t.url.toString()})`,"debug"),new Response(JSON.stringify(h));(0,o.log)(`\u{1F93A} Cache MISS for key \`${e}\` (${t.url.toString()})`,"debug");const i=await fetch(s,r),d=await i.clone().text();return await a.set(e,d,{ex:c.globalOptions?.cache?.upstash?.behaviour?.expireSetAfter||u[n]?.expireSetAfter||60}),i}catch(e){(0,o.log)(`Error fetching data from Upstash Redis: ${e}`,"error",!0)}return fetch(s,r)};exports.UpstashCacheProviderFetch=p;
//# sourceMappingURL=upstash.js.map
